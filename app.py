import streamlit as st
from PIL import Image
import requests
from io import BytesIO
import mimetypes

st.set_page_config(page_title="Weather Classification", layout="centered")
st.title("üå§Ô∏è –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –ø–æ —Ñ–æ—Ç–æ")
st.page_link("https://bbarft8l8qvurtgdgu9f.containers.yandexcloud.net/docs#/default/classify_image_clf_weather_post/", label="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ FastAPI Weather Classification üåê")

API_URL = "https://bbarft8l8qvurtgdgu9f.containers.yandexcloud.net/clf_weather"

def send_to_api(image_bytes, filename, content_type):
    files = {"file": (filename, image_bytes, content_type)}  # <-- –≤–∞–∂–µ–Ω 3-–π –∞—Ä–≥—É–º–µ–Ω—Ç!
    r = requests.post(API_URL, files=files, timeout=15)
    r.raise_for_status()
    return r.json()

option = st.radio("–°–ø–æ—Å–æ–± –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", ["–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª", "–£–∫–∞–∑–∞—Ç—å URL"], horizontal=True)

image = None
class_name = None
class_prob = None

if option == "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª":
    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", type=["jpg", "jpeg", "png", "webp"])
    if uploaded_file:
        img_bytes = uploaded_file.getvalue()
        # –±–µ—Ä—ë–º content-type –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ —É–≥–∞–¥—ã–≤–∞–µ–º –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
        ctype = uploaded_file.type or mimetypes.guess_type(uploaded_file.name)[0] or "image/jpeg"
        resp = send_to_api(img_bytes, uploaded_file.name or "upload.jpg", ctype)
        class_name, class_prob = resp["class_name"], resp["class_prob"]
        image = Image.open(BytesIO(img_bytes)).convert("RGB")

elif option == "–£–∫–∞–∑–∞—Ç—å URL":
    url = st.text_input("–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:")
    if url:
        r = requests.get(url, timeout=10)
        r.raise_for_status()
        img_bytes = r.content
        ctype = r.headers.get("Content-Type", "image/jpeg")  # –≤–æ–∑—å–º–∏ —Ç–∏–ø –∏–∑ –æ—Ç–≤–µ—Ç–∞
        resp = send_to_api(img_bytes, url.split("/")[-1] or "remote.jpg", ctype)
        class_name, class_prob = resp["class_name"], resp["class_prob"]
        image = Image.open(BytesIO(img_bytes)).convert("RGB")

# --- –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ---

CLASS_NAMES_dict = {
    'dew': '–†–æ—Å–∞',
    'fogsmog': '–¢—É–º–∞–Ω',
    'frost': '–ò–∑–º–æ—Ä–æ–∑—å',
    'glaze': '–ì–æ–ª–æ–ª—ë–¥',
    'hail': '–ì—Ä–∞–¥',
    'lightning': '–ú–æ–ª–Ω–∏—è',
    'rain': '–õ–∏–≤–µ–Ω—å, –ø–æ—Ç–æ–ø',
    'rainbow': '–†–∞–¥—É–≥–∞',
    'rime': '–ò–Ω–µ–π',
    'sandstorm': '–ü–µ—Å—á–∞–Ω–∞—è –±—É—Ä—è',
    'snow': '–°–Ω–µ–≥–æ–ø–∞–¥'
}

if image is not None:
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_container_width=True)
if class_name is not None:
    st.text(CLASS_NAMES_dict[class_name])
if class_prob is not None:
    st.text(class_prob)

